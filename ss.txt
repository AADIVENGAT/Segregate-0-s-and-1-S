// Segregate all the 0's in left side and 1's in right side

Sample input: 01010
Sample output: 00011

#include<stdio.h>
#include<string.h>
int main()
{
    int n;
    scanf("%d",&n);
    int arr[n];// input array
    for(int i=0;i<n;i++)
    {
        scanf("%d",&arr[i]);
    }
    int red = 0; // leftmost index
    int black = n-1; // rightmost index
    while(red<black)
    {
        // make red to move from left to right and find a 1
        while(red<black && arr[red]!=1)
        {
            red++;
        }
        // make black to move from right to left and find a 0
        while(red<black && arr[black]!=0)
        {
            black--;
        }
        int temp = arr[red];
        arr[red] = arr[black];
        arr[black] = temp;
    } 
    for(int i = 0;i<n;i++)
    {
        printf("%d ",arr[i]);
}
}


#include<stdio.h>
void segregate0and1(int arr[], int n)
{
int left = 0,right = n-1;
while(1)
{
if(left >= right)
    break;
if(arr[left] == 0)
    left++;
else if(arr[right] == 1)
    right--;
else
{
   arr[left] = 0;
   arr[right] = 1;
   left++;
   right--;
}
}
}
int main()
{
int n;
scanf("%d",&n);
int arr[n];
for(int i=0;i<n;i++)
   scanf("%d",&arr[i]);
segregate0and1(arr,n);
for(int i=0;i<n;i++)
   printf("%d",arr[i]);
return 0;
}